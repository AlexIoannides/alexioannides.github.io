<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Dr Alex Ioannides - machine-learning-engineering</title><link>https://alexioannides.github.io/</link><description>machine_learning_engineer - (data)scientist - reformed_quant - habitual_coder</description><lastBuildDate>Mon, 07 Nov 2022 00:00:00 +0000</lastBuildDate><item><title>Best Practices for Engineering ML Pipelines - Part 2</title><link>https://alexioannides.github.io/2022/11/07/best-practices-for-engineering-ml-pipelines-part-2/</link><description>&lt;p&gt;&lt;img alt="ml-pipeline-engineering" src="https://alexioannides.github.io/images/machine-learning-engineering/ml-pipeline-engineering/pipelines-logo.png"&gt;&lt;/p&gt;
&lt;p&gt;This is the second part in a series of articles demonstrating best practices for engineering &lt;span class="caps"&gt;ML&lt;/span&gt; pipelines and deploying them to production. In the &lt;a href="https://alexioannides.github.io/2021/03/03/best-practices-for-engineering-ml-pipelines-part-1/"&gt;first part&lt;/a&gt; we focused on project setup - everything from codebase structure to configuring a &lt;span class="caps"&gt;CI&lt;/span&gt;/&lt;span class="caps"&gt;CD&lt;/span&gt; pipeline and making an initial deployment of a skeleton&amp;nbsp;pipeline …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr Alex Ioannides</dc:creator><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:alexioannides.github.io,2022-11-07:/2022/11/07/best-practices-for-engineering-ml-pipelines-part-2/</guid><category>machine-learning-engineering</category><category>python</category><category>machine-learning</category><category>mlops</category><category>kubernetes</category><category>bodywork</category></item><item><title>Best Practices for Engineering ML Pipelines - Part 1</title><link>https://alexioannides.github.io/2021/03/03/best-practices-for-engineering-ml-pipelines-part-1/</link><description>&lt;p&gt;&lt;img alt="ml-pipeline-engineering" src="https://alexioannides.github.io/images/machine-learning-engineering/ml-pipeline-engineering/pipelines-logo.png"&gt;&lt;/p&gt;
&lt;p&gt;The is the first in a series of articles demonstrating how to engineer a machine learning pipeline and deploy it to a production environment. We’re going to assume that a solution to a &lt;span class="caps"&gt;ML&lt;/span&gt; problem already exists within a Jupyter notebook, and that our task is to engineer this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr Alex Ioannides</dc:creator><pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:alexioannides.github.io,2021-03-03:/2021/03/03/best-practices-for-engineering-ml-pipelines-part-1/</guid><category>machine-learning-engineering</category><category>python</category><category>machine-learning</category><category>mlops</category><category>kubernetes</category><category>bodywork</category></item><item><title>Deploying ML Models with Bodywork</title><link>https://alexioannides.github.io/2020/12/01/deploying-ml-models-with-bodywork/</link><description>&lt;p&gt;&lt;img alt="bodywork_logo" src="https://alexioannides.github.io/images/machine-learning-engineering/bodywork/bodywork-cli.png"&gt;&lt;/p&gt;
&lt;p&gt;Solutions to Machine Learning (&lt;span class="caps"&gt;ML&lt;/span&gt;) tasks are often developed within Jupyter notebooks. Once a solution is developed you are then faced with an altogether different problem - how to engineer the solution into your product and how to maintain the performance of the solution through time, as new data is&amp;nbsp;generated …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr Alex Ioannides</dc:creator><pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:alexioannides.github.io,2020-12-01:/2020/12/01/deploying-ml-models-with-bodywork/</guid><category>machine-learning-engineering</category><category>python</category><category>machine-learning</category><category>mlops</category><category>kubernetes</category><category>bodywork</category></item><item><title>Deploying Python ML Models with Flask, Docker and Kubernetes</title><link>https://alexioannides.github.io/2019/01/10/deploying-python-ml-models-with-flask-docker-and-kubernetes/</link><description>&lt;p&gt;&lt;img alt="jpeg" src="https://alexioannides.github.io/images/machine-learning-engineering/k8s-ml-ops/docker+k8s.jpg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;17th August 2019&lt;/strong&gt; - &lt;em&gt;updated to reflect changes in the Kubernetes &lt;span class="caps"&gt;API&lt;/span&gt; and Seldon&amp;nbsp;Core.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;14th December 2020&lt;/strong&gt; - &lt;em&gt;the work in this post forms the basis of the &lt;a href="https://www.bodyworkml.com"&gt;Bodywork&lt;/a&gt; MLOps tool - read about it &lt;a href="https://alexioannides.github.io/2020/12/01/deploying-ml-models-with-bodywork/"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A common pattern for deploying Machine Learning (&lt;span class="caps"&gt;ML&lt;/span&gt;) models into production environments - e.g. &lt;span class="caps"&gt;ML&lt;/span&gt; models …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr Alex Ioannides</dc:creator><pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:alexioannides.github.io,2019-01-10:/2019/01/10/deploying-python-ml-models-with-flask-docker-and-kubernetes/</guid><category>machine-learning-engineering</category><category>python</category><category>machine-learning</category><category>machine-learning-operations</category><category>kubernetes</category></item></channel></rss>